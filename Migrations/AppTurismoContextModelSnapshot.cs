// <auto-generated />
using AppTurismoAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppTurismoAPI.Migrations
{
    [DbContext(typeof(AppTurismoContext))]
    partial class AppTurismoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppTurismoAPI.Entities.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cidades");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "O Coração financeiro do Brasil.",
                            Nome = "São Paulo"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "O cartão postal do Brasil.",
                            Nome = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "A cidade do carnaval.",
                            Nome = "Recife"
                        });
                });

            modelBuilder.Entity("AppTurismoAPI.Entities.PontoTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("PontoTuristicos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CidadeId = 1,
                            Descricao = "A maior feira livre do mundo.",
                            Nome = "Feira livre"
                        },
                        new
                        {
                            Id = 2,
                            CidadeId = 2,
                            Descricao = "A estátua mais famosa do mundo.",
                            Nome = "Cristo redentor"
                        },
                        new
                        {
                            Id = 3,
                            CidadeId = 3,
                            Descricao = "A cidade do carnaval.",
                            Nome = "Praia de boa viagem"
                        });
                });

            modelBuilder.Entity("AppTurismoAPI.Entities.PontoTuristico", b =>
                {
                    b.HasOne("AppTurismoAPI.Entities.Cidade", "Cidade")
                        .WithMany("PontoTuristicos")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("AppTurismoAPI.Entities.Cidade", b =>
                {
                    b.Navigation("PontoTuristicos");
                });
#pragma warning restore 612, 618
        }
    }
}
